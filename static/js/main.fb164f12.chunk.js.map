{"version":3,"sources":["sengaka.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["canvas","sigma","shadow","ctx","getContext","img","getImageData","width","height","img2","glayscale","invert","blur","colorDodge","levels","clearRect","putImageData","i","Math","floor","data","length","r","g","b","l","max","min","glur","imgtop","bl","tl","s","nl","toBlob","type","quality","Promise","resolve","App","ref","useRef","fileName","useMemo","document","createElement","playing","useLocalStorage","jpg","senga","config","setConfig","useState","src","setSrc","openVideo","useCallback","file","indexOf","current","name","replace","URL","createObjectURL","handleInput","useFileInput","files","toggle","pause","play","seekFrame","forward","currentTime","seekRelative","seconds","nextFrame","prevFrame","nextSecond","prevSecond","nextSecond10","prevSecond10","handleCapture","a","videoWidth","videoHeight","drawImage","filename","blob","saveAs","sengaka","useHotkeys","j","showType","setShowType","useEffect","setShowSenga","timeout","window","setTimeout","clearTimeout","showSenga","handleDrop","e","preventDefault","dataTransfer","preventEvent","onClick","currentTarget","onPlay","onPause","controls","style","background","objectFit","onDragOver","onDrop","position","top","left","fontSize","color","pointerEvents","padding","opacity","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fb164f12.chunk.js","sourcesContent":["import glur from \"glur\";\n\nexport default (\n  canvas?: HTMLCanvasElement,\n  sigma: number = 1.5,\n  shadow: number = 200\n) => {\n  if (!canvas) return;\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) return;\n\n  const img = ctx.getImageData(0, 0, canvas.width, canvas.height);\n  let img2 = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n  glayscale(img);\n  glayscale(img2);\n  invert(img2);\n  blur(img2, sigma);\n  colorDodge(img, img2);\n  levels(img, shadow);\n\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.putImageData(img, 0, 0, 0, 0, canvas.width, canvas.height);\n};\n\nconst glayscale = (img: ImageData) => {\n  for (let i = 0; i < Math.floor(img.data.length / 4); i++) {\n    const r = img.data[i * 4];\n    const g = img.data[i * 4 + 1];\n    const b = img.data[i * 4 + 2];\n    const l = (Math.max(r, g, b) + Math.min(r, g, b)) / 2;\n    img.data[i * 4] = img.data[i * 4 + 1] = img.data[i * 4 + 2] = l;\n  }\n};\n\nconst invert = (img: ImageData) => {\n  for (let i = 0; i < Math.floor(img.data.length / 4); i++) {\n    img.data[i * 4] = 255 - img.data[i * 4];\n    img.data[i * 4 + 1] = 255 - img.data[i * 4 + 1];\n    img.data[i * 4 + 2] = 255 - img.data[i * 4 + 2];\n  }\n};\n\nconst blur = (img: ImageData, sigma: number) => {\n  glur(img.data, img.width, img.height, sigma);\n};\n\nconst colorDodge = (img: ImageData, imgtop: ImageData) => {\n  for (let i = 0; i < Math.floor(img.data.length / 4); i++) {\n    const bl = img.data[i * 4] / 255;\n    const tl = imgtop.data[i * 4] / 255;\n    let l = tl === 1 ? 1 : bl / (1.0 - tl);\n    img.data[i * 4] = img.data[i * 4 + 1] = img.data[i * 4 + 2] =\n      Math.min(1, l) * 255;\n  }\n};\n\nconst levels = (img: ImageData, shadow: number) => {\n  const s = shadow / 255;\n  const b = 1 - s;\n  for (let i = 0; i < Math.floor(img.data.length / 4); i++) {\n    const l = img.data[i * 4] / 255;\n    let nl = s === 0 ? (l === 1 ? 1 : 0) : l <= s ? 0 : (l - s) / b;\n    img.data[i * 4] = img.data[i * 4 + 1] = img.data[i * 4 + 2] = nl * 255;\n  }\n};\n","import React, {\n  useState,\n  useCallback,\n  useRef,\n  useMemo,\n  useEffect\n} from \"react\";\nimport { hot } from \"react-hot-loader/root\";\nimport useFileInput from \"use-file-input\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport { saveAs } from \"file-saver\";\nimport sengaka from \"./sengaka\";\nimport { useLocalStorage } from \"react-use\";\n\nconst toBlob = (\n  canvas: HTMLCanvasElement,\n  type?: string | undefined,\n  quality?: any\n) =>\n  new Promise<Blob | null>(resolve => {\n    canvas.toBlob(resolve, type, quality);\n  });\n\nconst App: React.FC = () => {\n  const ref = useRef<HTMLVideoElement>(null);\n  const fileName = useRef(\"\");\n  const canvas = useMemo(() => document.createElement(\"canvas\"), []);\n  const playing = useRef(false);\n  const [config, setConfig] = useLocalStorage(\"kiritoru_config\", {\n    jpg: false,\n    senga: false\n  });\n  const [src, setSrc] = useState<string>();\n  const openVideo = useCallback((file?: File) => {\n    if (!file || file.type.indexOf(\"video/\") !== 0) return;\n    playing.current = false;\n    fileName.current = file.name.replace(/\\..+$/, \"\");\n    setSrc(URL.createObjectURL(file));\n  }, []);\n  const handleInput = useFileInput(files => {\n    openVideo(files[0]);\n  });\n  const toggle = useCallback(() => {\n    if (!ref.current) return;\n    if (playing.current) {\n      ref.current.pause();\n    } else {\n      ref.current.play();\n    }\n    playing.current = !playing.current;\n  }, []);\n  const seekFrame = useCallback((forward: boolean) => {\n    if (!ref.current) return;\n    ref.current.currentTime =\n      ref.current.currentTime + (1 / 24) * (forward ? 1 : -1);\n  }, []);\n  const seekRelative = useCallback((seconds: number) => {\n    if (!ref.current) return;\n    ref.current.currentTime = ref.current.currentTime + seconds;\n  }, []);\n  const nextFrame = useCallback(() => {\n    if (playing.current) return;\n    return seekFrame(true);\n  }, [seekFrame]);\n  const prevFrame = useCallback(() => {\n    if (playing.current) return;\n    seekFrame(false);\n  }, [seekFrame]);\n  const nextSecond = useCallback(() => seekRelative(1), [seekRelative]);\n  const prevSecond = useCallback(() => seekRelative(-1), [seekRelative]);\n  const nextSecond10 = useCallback(() => seekRelative(10), [seekRelative]);\n  const prevSecond10 = useCallback(() => seekRelative(-10), [seekRelative]);\n  const handleCapture = useCallback(async () => {\n    if (!ref.current || !src) return;\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) return;\n    canvas.width = ref.current.videoWidth;\n    canvas.height = ref.current.videoHeight;\n    ctx.drawImage(ref.current, 0, 0);\n\n    const filename = `${fileName.current}_${Math.floor(\n      ref.current.currentTime * 24\n    )}`;\n\n    const blob = await toBlob(\n      canvas,\n      config.jpg ? \"image/jpeg\" : \"image/png\",\n      0.5\n    );\n    if (!blob || !ref.current) return;\n    saveAs(blob, `${filename}.${config.jpg ? \"jpg\" : \"png\"}`);\n\n    if (config.senga) {\n      sengaka(canvas);\n      const blob = await toBlob(\n        canvas,\n        config.jpg ? \"image/jpeg\" : \"image/png\",\n        1\n      );\n      if (!blob || !ref.current) return;\n      saveAs(blob, `${filename}_senga.${config.jpg ? \"jpg\" : \"png\"}`);\n    }\n  }, [canvas, config.jpg, config.senga, src]);\n\n  useHotkeys(\"space\", toggle, [toggle]);\n  useHotkeys(\"o\", handleInput, [handleInput]);\n  useHotkeys(\"left\", prevFrame, [prevFrame]);\n  useHotkeys(\"right\", nextFrame, [nextFrame]);\n  useHotkeys(\"shift+left\", prevSecond, [prevSecond]);\n  useHotkeys(\"shift+right\", nextSecond, [nextSecond]);\n  useHotkeys(\"alt+left\", prevSecond10, [prevSecond10]);\n  useHotkeys(\"alt+right\", nextSecond10, [nextSecond10]);\n  useHotkeys(\"c\", handleCapture, [handleCapture]);\n  useHotkeys(\n    \"t\",\n    () => {\n      setConfig(j => ({ ...j, jpg: !j.jpg }));\n    },\n    []\n  );\n  useHotkeys(\n    \"s\",\n    () => {\n      setConfig(j => ({ ...j, senga: !j.senga }));\n    },\n    []\n  );\n\n  const [showType, setShowType] = useState(false);\n\n  useEffect(() => {\n    setShowType(true);\n    setShowSenga(false);\n    const timeout = window.setTimeout(() => {\n      setShowType(false);\n    }, 1000);\n    return () => window.clearTimeout(timeout);\n  }, [config.jpg]);\n\n  const [showSenga, setShowSenga] = useState(false);\n\n  useEffect(() => {\n    setShowType(false);\n    setShowSenga(true);\n    const timeout = window.setTimeout(() => {\n      setShowSenga(false);\n    }, 1000);\n    return () => window.clearTimeout(timeout);\n  }, [config.senga]);\n\n  const handleDrop = useCallback(\n    (e: React.DragEvent<HTMLElement>) => {\n      e.preventDefault();\n      openVideo(e.dataTransfer.files[0]);\n    },\n    [openVideo]\n  );\n\n  const preventEvent = useCallback((e: React.SyntheticEvent) => {\n    e.preventDefault();\n  }, []);\n\n  return (\n    <>\n      <video\n        ref={ref}\n        src={src}\n        onClick={e => e.currentTarget.blur()}\n        onPlay={() => {\n          playing.current = true;\n        }}\n        onPause={() => {\n          playing.current = false;\n        }}\n        controls\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          background: \"#000\",\n          objectFit: \"contain\"\n        }}\n        onDragOver={preventEvent}\n        onDrop={handleDrop}\n      />\n      <div\n        style={{\n          position: \"absolute\",\n          top: \"10px\",\n          left: \"10px\",\n          fontSize: \"48px\",\n          color: \"#fff\",\n          background: \"rgba(0, 0, 0, 0.5)\",\n          pointerEvents: \"none\",\n          padding: \"0px 10px\",\n          opacity: showType || showSenga ? \"1\" : \"0\"\n        }}\n      >\n        {showSenga\n          ? config.senga\n            ? \"線画保存\"\n            : \"線画無し\"\n          : config.jpg\n          ? \"JPG\"\n          : \"PNG\"}\n      </div>\n    </>\n  );\n};\n\nexport default hot(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}